name: CI/CD Pipeline for .NET Backend

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: [self-hosted, "MAYANK"]  # Ensure it's running on your self-hosted runner

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Setup .NET SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      # Restore dependencies
      - name: Restore Dependencies
        run: dotnet restore "InfinixInfotech/InfinixInfotech.csproj"

      # Build the application
      - name: Build Application
        run: dotnet build "InfinixInfotech/InfinixInfotech.csproj" --configuration Release --no-restore

      # Run Tests
      - name: Run Tests
        run: dotnet test "InfinixInfotech/InfinixInfotech.csproj" --configuration Release --no-build

      # Publish the application for Docker
      - name: Publish Application
        run: dotnet publish "InfinixInfotech/InfinixInfotech.csproj" -c Release -o ./publish

  deploy:
    name: Deploy to Docker
    needs: build  # Ensure 'deploy' depends on 'build'
    runs-on: [self-hosted, "MAYANK"]  # Use the self-hosted runner with the "MAYANK" label

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Build Docker image for the backend
      - name: Build Docker Image
        run: |
          # Build the Docker image locally and tag it as 'latest'
          docker build -t backendmailbox:latest .

      # Stop and remove old Docker container
      - name: Stop and Remove Old Docker Container
        run: |
          # Stop and remove the old container, suppress errors if they occur
          docker stop backendmailbox || true
          docker rm backendmailbox || true

      # Deploy new Docker container
      - name: Deploy New Docker Container
        run: |
          # Run the new container on the appropriate port
          docker run -d -p 5119:5119 --name backendmailbox backendmailbox:latest
          # Verify if the container is running
          docker ps
