name: CI/CD Pipeline for .NET Backend

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build, Test, and Analyze
    runs-on: [self-hosted, "BACKEND"]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Restore Dependencies
        run: dotnet restore "InfinixInfotech/InfinixInfotech.csproj"

      - name: Build Application
        run: dotnet build "InfinixInfotech/InfinixInfotech.csproj" --configuration Release --no-restore

      - name: Run Unit Tests with Coverage
        run: |
          dotnet test "InfinixInfotech/InfinixInfotech.csproj" --configuration Release --no-build \
            --collect:"XPlat Code Coverage" --results-directory "$GITHUB_WORKSPACE/TestResults"

      - name: Debug Test Results Directory
        run: ls -R "$GITHUB_WORKSPACE/TestResults"

      - name: Install ReportGenerator Tool
        run: |
          dotnet tool install --global dotnet-reportgenerator-globaltool
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Generate Test Coverage Report
        run: |
          reportgenerator -reports:"$GITHUB_WORKSPACE/TestResults/**/coverage.cobertura.xml" \
            -targetdir:"$GITHUB_WORKSPACE/TestResults/coverage" -reporttypes:Html

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: "$GITHUB_WORKSPACE/TestResults/coverage"



      - name: Run Code Analysis with dotnet-format
        run: dotnet format "InfinixInfotech/InfinixInfotech.csproj" --check

      - name: Publish Application
        run: dotnet publish "InfinixInfotech/InfinixInfotech.csproj" --configuration Release --output "$GITHUB_WORKSPACE/publish" --self-contained false

  deploy:
    name: Deploy to Docker
    needs: build
    runs-on: [self-hosted, "BACKEND"]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: docker build -t backendmailbox:latest .

      - name: Stop and Remove Old Docker Container
        run: |
          docker stop backendmailbox || true
          docker rm backendmailbox || true

      - name: Deploy New Docker Container
        run: docker run -d -p 5119:8080 --name backendmailbox backendmailbox:latest
